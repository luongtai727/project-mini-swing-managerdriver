/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controler.ControllerIMP;
import Model.Buses;
import Model.Driver;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author macbook
 */
public class mainFrom extends javax.swing.JFrame implements view{

    /**
     * Creates new form mainFrom
     */
   private DefaultTableModel defaultDriver;
   private ControllerIMP controller;
   private DefaultTableModel defaultBusesDefaultTableModel;
   
   private ArrayList<Driver> arrDriver;
   private ArrayList<Buses> arrBuses;
     
    public mainFrom() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        
        arrDriver = new ArrayList<>();
        controller = new ControllerIMP();
        
        defaultDriver = (DefaultTableModel) driverTable.getModel();
        defaultBusesDefaultTableModel = (DefaultTableModel) busesTable.getModel();
        
        showDataAll();
    }

    public DefaultTableModel getDefaultBusesDefaultTableModel() {
        return defaultBusesDefaultTableModel;
    }

    public void setDefaultBusesDefaultTableModel(DefaultTableModel defaultBusesDefaultTableModel) {
        this.defaultBusesDefaultTableModel = defaultBusesDefaultTableModel;
    }

    public ArrayList<Buses> getArrBuses() {
        return arrBuses;
    }

    public void setArrBuses(ArrayList<Buses> arrBuses) {
        this.arrBuses = arrBuses;
    }

    public JTable getBusesTable() {
        return busesTable;
    }

    public void setBusesTable(JTable busesTable) {
        this.busesTable = busesTable;
    }

    
    public JTable getDriverTable() {
        return driverTable;
    }

    public void setDriverTable(JTable driverTable) {
        this.driverTable = driverTable;
    }
 
    
    public DefaultTableModel getDefaultDriver() {
        return defaultDriver;
    }

    public void setDefaultDriver(DefaultTableModel defaultDriver) {
        this.defaultDriver = defaultDriver;
    }

    public ControllerIMP getController() {
        return controller;
    }

    public void setController(ControllerIMP controller) {
        this.controller = controller;
    }

    public ArrayList<Driver> getArrDriver() {
        return arrDriver;
    }

    public void setArrDriver(ArrayList<Driver> arrDriver) {
        this.arrDriver = arrDriver;
    }
    
    public  void setArrayListDrive(Driver value, int index)
    {
        arrDriver.set(index, value);
    }
    
    public Driver getValueArrayListDriver(int idex)
    {
       return arrDriver.get(idex);
    }
    
    private void showDataAll()
    {
        showDataDriver();
        showDataBuses();
        
    }
    
    private  void showDataBuses()
    {
        
        arrBuses = controller.readDataFromFile("buses.txt");
        showData(arrBuses, defaultBusesDefaultTableModel);
    }
    
    private void showDataDriver()
    {
       arrDriver =  controller.readDataFromFile("driver.txt");
       showData(arrDriver, defaultDriver);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        driverTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        busesTable = new javax.swing.JTable();
        changeBusesbutton = new javax.swing.JButton();
        deleteBusesButton = new javax.swing.JButton();
        addBusesButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        driverTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "name", "Adress", "level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        driverTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                driverTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(driverTable);

        jButton1.setText("changer");

        jButton2.setText("delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(73, 73, 73)
                .addComponent(jButton2)
                .addGap(80, 80, 80)
                .addComponent(jButton1)
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)))
        );

        jTabbedPane1.addTab("Manager driver", jPanel1);

        busesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Rand", "poinEnd"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        busesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busesTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                busesTableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(busesTable);

        changeBusesbutton.setText("changer");

        deleteBusesButton.setText("Delete");
        deleteBusesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBusesButtonActionPerformed(evt);
            }
        });

        addBusesButton.setText("Add");
        addBusesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBusesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(addBusesButton)
                .addGap(48, 48, 48)
                .addComponent(deleteBusesButton)
                .addGap(55, 55, 55)
                .addComponent(changeBusesbutton)
                .addGap(112, 112, 112))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeBusesbutton)
                    .addComponent(deleteBusesButton)
                    .addComponent(addBusesButton)))
        );

        jTabbedPane1.addTab("manager buses", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 764, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("manager", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new addDriver(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int i = driverTable.getSelectedRow();
        
        if (i >= 0) {
            defaultDriver.removeRow(i);
            arrDriver.remove(i);
            controller.writeToFile(arrDriver, "driver.txt");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void driverTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_driverTableMousePressed
        // TODO add your handling code here:
        
        JTable table =(JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            // your valueChanged overridden method
            new changeDriveDl(this, rootPaneCheckingEnabled, driverTable.getSelectedRow()).setVisible(true);
        }
    }//GEN-LAST:event_driverTableMousePressed

    private void addBusesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBusesButtonActionPerformed
        // TODO add your handling code here:
        
        new addBuses(this, rootPaneCheckingEnabled).setVisible(true);
        
        
    }//GEN-LAST:event_addBusesButtonActionPerformed

    private void deleteBusesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBusesButtonActionPerformed
        // TODO add your handling code here:
         int i = busesTable.getSelectedRow();
        
        if (i >= 0) {
            defaultBusesDefaultTableModel.removeRow(i);
            arrBuses.remove(i);
            controller.writeToFile(arrBuses, "buses.txt");
        }
    }//GEN-LAST:event_deleteBusesButtonActionPerformed

    private void busesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busesTableMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_busesTableMouseClicked

    private void busesTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busesTableMousePressed
        // TODO add your handling code here:
        
         JTable table =(JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            // your valueChanged overridden method
            new changeBuses(this, rootPaneCheckingEnabled, busesTable.getSelectedRow()).setVisible(true);
        }
    }//GEN-LAST:event_busesTableMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBusesButton;
    private javax.swing.JTable busesTable;
    private javax.swing.JButton changeBusesbutton;
    private javax.swing.JButton deleteBusesButton;
    private javax.swing.JTable driverTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public <T> void showData(ArrayList<T> listData, DefaultTableModel defaultTableModel) {
        defaultTableModel.setRowCount(0);
       
        for (T t : listData) {
            if (t instanceof Driver) {
                 Driver driver = (Driver)t;
                 defaultTableModel.addRow(new Object[]{driver.getIdString(), driver.getNameString(), driver.getAdressString(), driver.getLevelString()}); 
            
            }
            if (t instanceof Buses) {
                Buses bus = (Buses) t;
                defaultBusesDefaultTableModel.addRow(new Object[]{bus.getIdBusesString(), bus.getRangeString(), bus.getPointString()});
            }
        }
    }
    
   
    
    public  <T> void addrow(T t)
    {
        String fileString = null;
        ArrayList  arr = null;
        if (t instanceof Driver) {
            
            Driver driver = (Driver)t;
            defaultDriver.addRow(new Object[]{
            driver.getIdString(),
            driver.getNameString(), 
            driver.getAdressString(), 
            driver.getLevelString()});
            arrDriver.add(driver);
            controller.writeToFile(arrDriver,"driver.txt");
            fileString = "driver.txt";
            arr = arrDriver;
            
        }
        
        if (t instanceof Buses) {
            Buses buse = (Buses)t;
            defaultBusesDefaultTableModel.addRow(new Object[]{buse.getIdBusesString().toString(), buse.getRangeString(), buse.getPointString()});
            arrBuses.add(buse);
            fileString = "buses.txt";
            arr = arrBuses;
        }
        
        controller.writeToFile(arr, fileString);
        
    }

}

   
